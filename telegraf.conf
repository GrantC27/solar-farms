# Telegraf Configuration for Solar Farm MQTT Data Collection

[global_tags]
  # Global tags can be specified here in key="value" format.
  environment = "solar-farm-simulation"
  username = "telegraf"

[agent]
  # Configuration for telegraf agent
  interval = "30s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  hostname = ""
  omit_hostname = false

###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

# Output to InfluxDB v2
[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  token = "solar-farms-admin-token-super-secret-12345"
  organization = "solar-farms"
  bucket = "solar_farms"
  timeout = "5s"
  # Optional: specify precision for timestamps
  precision = "s"

# Output to console for debugging (comment out in production)
[[outputs.file]]
  files = ["stdout"]
  data_format = "influx"

# Output to file for logging
[[outputs.file]]
  files = ["/tmp/telegraf-solar-farm.log"]
  data_format = "json"
  rotation_max_size = "100MB"
  rotation_max_archives = 5

###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

# MQTT Consumer for Solar Farm Static Data
[[inputs.mqtt_consumer]]
  servers = ["tcp://mosquitto:1883"]
  topics = [
    "solar_farms/+/static"
  ]
  username = ""
  password = ""
  qos = 1
  connection_timeout = "30s"
  # max_reconnect_delay = "10m"
  
  # Data format
  data_format = "json"
  json_string_fields = [
    "site_id",
    "site_name", 
    "country",
    "state",
    "timezone",
    "installation_date"
  ]
  json_time_key = ""
  json_time_format = ""
  
  # Tags from JSON fields
  tag_keys = [
    "site_id",
    "country",
    "state"
  ]
  
  # Override measurement name
  name_override = "solar_farm_static"
  
  # Tags
  [inputs.mqtt_consumer.tags]
    data_type = "static"
    source = "solar_farm_simulator"

# MQTT Consumer for Solar Farm Telemetry Data  
[[inputs.mqtt_consumer]]
  servers = ["tcp://mosquitto:1883"]
  topics = [
    "solar_farms/+/telemetry"
  ]
  username = ""
  password = ""
  qos = 1
  connection_timeout = "30s"
  
  # Data format
  data_format = "json"
  json_string_fields = [
    "site_id"
  ]
  json_time_key = "timestamp"
  json_time_format = "2006-01-02T15:04:05Z07:00"
  
  # Tags from JSON fields
  tag_keys = [
    "site_id"
  ]
  
  # Override measurement name
  name_override = "solar_farm_telemetry"
  
  # Tags
  [inputs.mqtt_consumer.tags]
    data_type = "telemetry"
    source = "solar_farm_simulator"

# MQTT Consumer for Solar Farm Fault Data
[[inputs.mqtt_consumer]]
  servers = ["tcp://mosquitto:1883"]
  topics = [
    "solar_farms/+/faults"
  ]
  username = ""
  password = ""
  qos = 1
  connection_timeout = "30s"
  
  # Data format
  data_format = "json"
  json_string_fields = [
    "site_id",
    "fault_type",
    "fault_description",
    "severity"
  ]
  json_time_key = "timestamp"
  json_time_format = "2006-01-02T15:04:05Z07:00"
  
  # Tags from JSON fields
  tag_keys = [
    "site_id",
    "fault_type",
    "severity"
  ]
  
  # Override measurement name
  name_override = "solar_farm_faults"
  
  # Tags
  [inputs.mqtt_consumer.tags]
    data_type = "faults"
    source = "solar_farm_simulator"

# MQTT Consumer for Solar Farm Maintenance Data
[[inputs.mqtt_consumer]]
  servers = ["tcp://mosquitto:1883"]
  topics = [
    "solar_farms/+/maintenance"
  ]
  username = ""
  password = ""
  qos = 1
  connection_timeout = "30s"
  
  # Data format
  data_format = "json"
  json_string_fields = [
    "site_id",
    "maintenance_type",
    "status"
  ]
  json_time_key = "timestamp"
  json_time_format = "2006-01-02T15:04:05Z07:00"
  
  # Tags from JSON fields
  tag_keys = [
    "site_id",
    "maintenance_type",
    "status"
  ]
  
  # Override measurement name
  name_override = "solar_farm_maintenance"
  
  # Tags
  [inputs.mqtt_consumer.tags]
    data_type = "maintenance"
    source = "solar_farm_simulator"

# MQTT Consumer for Solar Farm Weather Data
[[inputs.mqtt_consumer]]
  servers = ["tcp://mosquitto:1883"]
  topics = [
    "solar_farms/+/weather"
  ]
  username = ""
  password = ""
  qos = 1
  connection_timeout = "30s"
  
  # Data format
  data_format = "json"
  json_string_fields = [
    "site_id"
  ]
  json_time_key = "timestamp"
  json_time_format = "2006-01-02T15:04:05Z07:00"
  
  # Tags from JSON fields
  tag_keys = [
    "site_id"
  ]
  
  # Override measurement name
  name_override = "solar_farm_weather"
  
  # Tags
  [inputs.mqtt_consumer.tags]
    data_type = "weather"
    source = "solar_farm_simulator"